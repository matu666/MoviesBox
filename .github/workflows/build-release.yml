name: Build and Release APK

on:
  push:
    tags:
      - '*'
  workflow_dispatch:
      inputs:
        tag_name:
          description: 'Tag name for the release'
          required: true
          default: ''
          
jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    # Checkout repository
    - name: Checkout Code
      uses: actions/checkout@v3
      
    # Set up JDK
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'zulu'
   
    # Grant execute permission for gradlew
    - name: Grant execute permission for gradlew
      run: chmod +x ./gradlew
      
    # Print Gradle JDK version
    - name: Check Gradle JDK version
      run: ./gradlew -version
      
    - name: Check Cache Contents
      run: ls -la ~/.gradle/caches
    - name: Debug Cache Key
      run: echo "Cache KeyÔºö${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}"

    # Restore Gradle Cache
    - name: Restore Gradle Cache
      uses: actions/cache/restore@v4
      with:
        path: ~/.gradle/caches
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}

    # Gradle dependencies
    # - name: Cache Gradle Dependencies
    #   uses: actions/cache@v4
    #   with:
    #     path: ~/.gradle/caches
    #     key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
    #     restore-keys: |
    #       ${{ runner.os }}-gradle-

    # Build APK
    # --stacktrace --info
    - name: Build APK
      run: ./gradlew assembleRelease

    # Save Gradle Cache
    - name: Save Gradle Cache
      uses: actions/cache/save@v4
      with:
        path: ~/.gradle/caches
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}

    # Sign APK
    - name: Sign APK
      id: sign_release_apk
      uses: ilharp/sign-android-release@v1
      with:
        signingKey: ${{ secrets.ANDROID_SIGNING_KEY }}
        keyAlias: ${{ secrets.ANDROID_KEY_ALIAS }}
        keyStorePassword: ${{ secrets.ANDROID_KEYSTORE_PASSWORD }}
        keyPassword: ${{ secrets.ANDROID_KEY_PASSWORD }}
        buildToolsVersion: 34.0.0

    # Upload Release
    - name: Upload APK to Release
      uses: termux/upload-release-action@v4.2.0
      with:
        asset_name: app-release-${{ github.event.inputs.tag_name || github.ref_name }}.apk
        file: ${{ steps.sign_release_apk.outputs.signedFile }}
        repo_token: ${{ secrets.TOKEN }}
        tag: ${{ github.ref_name }}
        overwrite: true
        body: |
          New release automatically generated by GitHub Actions.

    # - name: Upload Release
    #   uses: softprops/action-gh-release@v1
    #   with:
    #     token: ${{secrets.TOKEN }}
    #     body: |
    #       New release automatically generated by GitHub Actions.
    #     files: app/build/outputs/apk/release/*.apk
    
    # ÂÆåÊàê
    - run: echo "üçè job's status is ${{ job.status }}."
